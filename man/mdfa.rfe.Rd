% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rfe.R
\name{mdfa.rfe}
\alias{mdfa.rfe}
\title{Common factor score identification in matrix decomposition factor analysis (MDFA)
; Regression version}
\usage{
mdfa.rfe(X, Y, r, lambda, eps = 1e-06, itemax = 2000)
}
\arguments{
\item{X}{A matrix. n * p data matrix}

\item{Y}{A matrix. n * q data matrix of external criterion}

\item{r}{An integer. Number of common factors.}

\item{lambda}{A numeric value. Tuning parameter > 0}

\item{eps}{A numeric value. Convergence criterion.}

\item{itemax}{An integer. Maximum number of iteration}
}
\value{
List of the following objects.\cr
F: A matrix. Common factor score.\cr
Fr: A matrix. Common factor score; rotated.\cr
U: A matrix. Unique factor score.\cr
A: A matrix. Factor loadings.\cr
Ar: A matrix. Factor loadings; rotated.\cr
W: A matrix. Regression coefficients\cr
D: A matrix. Square root of uniqueness.\cr
int.factor.corr: A matrix. Inter-factor correlation.\cr
fitted.cov: A matrix. Covariance matrix fitted to X.\cr
history: A numeric vector. Iteration history.\cr
AIC: A numeric value. AIC value.\cr
}
\description{
min. ||X - (FA' + UD)||^2 + lambda||Y - FW||^2 over F, A, U, D, and W.\cr
\cr
n: number of observations\cr
p: number of observed variables\cr
q: number of external criterion\cr
r: number of common factors\cr
X: n * p data matrix\cr
F: n * r common factor score matrix\cr
U: n * p unique factor score matrix\cr
A: p * r factor loading matrix\cr
D: diagonal matrix of square root of uniqueness\cr
W: r * q regression coefficient matrix\cr
lambda : tuning parameter\cr
}
\examples{
library(lavaan)
aics <- c()
lambdas <- 10^(seq(-3, 1, by = 0.5))
res.list <- list()
idx <- 1
n.starts <- 10
for(lambda in lambdas){
  res.list.tmp <- list()
  f.list.tmp <- c()
  for(i in 1:n.starts){
    res.list.tmp[[i]] <- mdfa.rfe(X, Y, 3, lambda)
    f.list.tmp[i] <- min(res.list.tmp[[i]]$history)
  }
  res.list[[idx]] <- res.list.tmp[[which.min(f.list.tmp)]]
  aics[idx] <- res.list[[idx]]$AIC
  idx <- idx + 1
}
res.list[[which.min(aics)]]
}
